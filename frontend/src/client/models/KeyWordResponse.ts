/* tslint:disable */
/* eslint-disable */
/**
 * api_server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RegionSummary } from './RegionSummary';
import {
    RegionSummaryFromJSON,
    RegionSummaryFromJSONTyped,
    RegionSummaryToJSON,
} from './RegionSummary';

/**
 * 
 * @export
 * @interface KeyWordResponse
 */
export interface KeyWordResponse {
    /**
     * 
     * @type {Array<string>}
     * @memberof KeyWordResponse
     */
    keywords: Array<string>;
    /**
     * 
     * @type {Array<RegionSummary>}
     * @memberof KeyWordResponse
     */
    regionSummaries: Array<RegionSummary>;
    /**
     * 
     * @type {Array<number>}
     * @memberof KeyWordResponse
     */
    boundaries: Array<number>;
}

/**
 * Check if a given object implements the KeyWordResponse interface.
 */
export function instanceOfKeyWordResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "keywords" in value;
    isInstance = isInstance && "regionSummaries" in value;
    isInstance = isInstance && "boundaries" in value;

    return isInstance;
}

export function KeyWordResponseFromJSON(json: any): KeyWordResponse {
    return KeyWordResponseFromJSONTyped(json, false);
}

export function KeyWordResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyWordResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keywords': json['keywords'],
        'regionSummaries': ((json['region_summaries'] as Array<any>).map(RegionSummaryFromJSON)),
        'boundaries': json['boundaries'],
    };
}

export function KeyWordResponseToJSON(value?: KeyWordResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'keywords': value.keywords,
        'region_summaries': ((value.regionSummaries as Array<any>).map(RegionSummaryToJSON)),
        'boundaries': value.boundaries,
    };
}

